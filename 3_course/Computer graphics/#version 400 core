#version 400 core
layout (lines) in;
layout (triangle_strip, max_vertices = 39) out;
in VertexData {
    vec3 color;
} extra_data[];

out vec3 color_f;

void main() {

    //Draw the first triangle
    //------------------------------RED---------------------------------------------
    for(int i = 0; i<2;i++)
    {
        color_f =  vec3(1,0,0);
        gl_Position =gl_in[i].gl_Position;
        if(i==1) {
            gl_Position.y+=sqrt(3)*0.64f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 1.6f;
        }
        else {
            gl_Position.y+=sqrt(3)*2.43f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 1.71f;
        }

        gl_Position.z = -3.0f;

        gl_Position.w += 2.5f;
        EmitVertex();
    }
    color_f =  vec3(1,0,0);
    gl_Position.x = 0.57f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*(2.0f)-gl_in[0].gl_Position.y;
    gl_Position.y = sqrt(3)*5.2f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)/(3.0f)+gl_in[0].gl_Position.y;
    gl_Position.z = -3.0f;
    gl_Position.w = 3.0f;
    EmitVertex();
    EndPrimitive();

    for(int i = 0; i<2;i++)
    {
        color_f =  vec3(0,0,0);
        gl_Position =gl_in[i].gl_Position;
        if(i==1) {
            gl_Position.y+=sqrt(3)*0.4f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 1.65f;
        }
        else {
            gl_Position.y+=sqrt(3)*2.4f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 1.7f;
        }


        gl_Position.w += 2.35f;
        EmitVertex();
    }
    color_f =  vec3(0,0,0);
    gl_Position.x = 0.6f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*(2.0f)-gl_in[0].gl_Position.y;
    gl_Position.y = sqrt(3)*4.95f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)/(3.0f)+gl_in[0].gl_Position.y;
    gl_Position.z = 0.0f;
    gl_Position.w = 2.75f;
    EmitVertex();
    EndPrimitive();

    //---------------------YELLOW-----------------------------------------------------

    for(int i = 0; i<2;i++)
    {
        color_f =  vec3(1,1,0);
        gl_Position =gl_in[i].gl_Position;
        if(i==1) {
            gl_Position.y-=sqrt(3)*1.36*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 0.85f;
        }
        else {
            gl_Position.y-=sqrt(3)*2.56f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 1.41f;
        }

        gl_Position.z = -3.0f;

        gl_Position.w += 2.5f;
        EmitVertex();
    }
    color_f =  vec3(1,1,0);
    gl_Position.x -= 1.22;
    gl_Position.y = sqrt(3)*4.3f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)/(3.0f)+gl_in[0].gl_Position.y-0.01;
    gl_Position.z = -3.0f;
    gl_Position.w = 3.03f;
    EmitVertex();
    EndPrimitive();

    for(int i = 0; i<2;i++)
    {
        color_f =  vec3(0,0,0);
        gl_Position =gl_in[i].gl_Position;
        if(i==1) {
            gl_Position.y-=sqrt(3)*1.965f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 0.55f;
        }
        else {
            gl_Position.y-=sqrt(3)*2.65f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 1.44f;
        }


        gl_Position.w += 2.5f;
        EmitVertex();
    }
    color_f =  vec3(0,0,0);
    gl_Position.x -= 1.55;
    gl_Position.y = sqrt(3)*4.5f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)/(3.0f)+gl_in[0].gl_Position.y;
    gl_Position.z = 0.0f;
    gl_Position.w = 3.02f;
    EmitVertex();
    EndPrimitive();
    //-----------------------GREEN--------------------------------------------------
    for(int i = 0; i<2;i++)
    {
        color_f =  vec3(0,1,0);
        gl_Position =gl_in[i].gl_Position;
        if(i==1) {
            gl_Position.y-=sqrt(3)*0.44f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x += 0.82f;
        }
        else {
            gl_Position.y-=sqrt(3)*3.36f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x += 2.49f;
        }

        gl_Position.z = -3.0f;

        gl_Position.w += 4.5f;
        EmitVertex();
    }
    color_f =  vec3(0,1,0);
    gl_Position.x -= 3.85;
    gl_Position.y -= sqrt(3)*8.96f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)/(3.0f)+gl_in[0].gl_Position.y;
    gl_Position.z = -3.0f;
    gl_Position.w = 6.02f;
    EmitVertex();
    EndPrimitive();

    for(int i = 0; i<2;i++)
    {
        color_f =  vec3(0,0,0);
        gl_Position =gl_in[i].gl_Position;
        if(i==1) {
            gl_Position.y-=sqrt(3)*0.3f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x += 0.8f;
        }
        else {
            gl_Position.y-=sqrt(3)*3.45f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x += 2.6f;
        }


        gl_Position.w += 4.5f;
        EmitVertex();
    }
    color_f =  vec3(0,0,0);
    gl_Position.x -= 4.1;
    gl_Position.y -= sqrt(3)*9.66f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)/(3.0f)+gl_in[0].gl_Position.y;
    gl_Position.z = 0.0f;
    gl_Position.w = 6.02f;
    EmitVertex();
    EndPrimitive();

    //-----------------------BLUE--------------------------------------------------
    for(int i = 0; i<2;i++)
    {
        color_f =  vec3(0,0,1);
        gl_Position =gl_in[i].gl_Position;
        if(i==1) {
            gl_Position.y+=sqrt(3)*2.74f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 0.28f;
        }
        else {
            gl_Position.y+=sqrt(3)*4.45f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x += 2.05f;
        }

        gl_Position.z = -3.0f;

        gl_Position.w += 4.5f;
        EmitVertex();
    }
    color_f =  vec3(0,0,1);
    gl_Position.x += 2.36;
    gl_Position.y -= sqrt(3)*13.05f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)/(3.0f)+gl_in[0].gl_Position.y;
    gl_Position.z = -3.0f;
    gl_Position.w = 6.02f;
    EmitVertex();
    EndPrimitive();

    for(int i = 0; i<2;i++)
    {
        color_f =  vec3(0,0,0);
        gl_Position =gl_in[i].gl_Position;
        if(i==1) {
            gl_Position.y+=sqrt(3)*2.78f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 0.38f;
        }
        else {
            gl_Position.y+=sqrt(3)*4.53f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x += 2.1f;
        }


        gl_Position.w += 4.5f;
        EmitVertex();
    }
    color_f =  vec3(0,0,0);
    gl_Position.x += 2.58;
    gl_Position.y -= sqrt(3)*13.96f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)/(3.0f)+gl_in[0].gl_Position.y;
    gl_Position.z = 0.0f;
    gl_Position.w = 6.02f;
    EmitVertex();
    EndPrimitive();

    //-----------------------Line 1--------------------------------------------------
    for(int i = 0; i<2;i++)
    {
        color_f =  vec3(1,1,1);
        gl_Position =gl_in[i].gl_Position;
        if(i==1) {
            gl_Position.y-=sqrt(3)*0.48f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 1.76f;
        }
        else {
            gl_Position.y+=sqrt(3)*0.8f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 1.6f;
        }

        gl_Position.z = -3.0f;

        gl_Position.w += 4.5f;
        EmitVertex();
    }
    color_f =  vec3(1,1,1);
    gl_Position.x += 1.3;
    gl_Position.y += sqrt(3)*7.25*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)/(3.0f)+gl_in[0].gl_Position.y;
    gl_Position.z = -3.0f;
    gl_Position.w = 6.02f;
    EmitVertex();
    EndPrimitive();

    for(int i = 0; i<2;i++)
    {
        color_f =  vec3(0,0,0);
        gl_Position =gl_in[i].gl_Position;
        if(i==1) {
            gl_Position.y-=sqrt(3)*0.5f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 1.68f;
        }
        else {
            gl_Position.y+=sqrt(3)*1.6f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 1.9f;
        }


        gl_Position.w += 4.5f;
        EmitVertex();
    }
    color_f =  vec3(0,0,0);
    gl_Position.x += 1.7;
    gl_Position.y += sqrt(3)*9.18*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)/(3.0f)+gl_in[0].gl_Position.y;
    gl_Position.z = 0.0f;
    gl_Position.w = 6.02f;
    EmitVertex();
    EndPrimitive();

    //-----------------------Line 2--------------------------------------------------
    for(int i = 0; i<2;i++)
    {
        color_f =  vec3(1,1,1);
        gl_Position =gl_in[i].gl_Position;
        if(i==1) {
            gl_Position.y-=sqrt(3)*2.17f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 1.0f;
        }
        else {
            gl_Position.y-=sqrt(3)*0.5f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 1.1f;
        }

        gl_Position.z = -3.0f;

        gl_Position.w += 4.5f;
        EmitVertex();
    }
    color_f =  vec3(1,1,1);
    gl_Position.x += 1.75;
    gl_Position.y += sqrt(3)*3.95*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)/(3.0f)+gl_in[0].gl_Position.y;
    gl_Position.z = -3.0f;
    gl_Position.w = 6.02f;
    EmitVertex();
    EndPrimitive();

    for(int i = 0; i<2;i++)
    {
        color_f =  vec3(1,0,0);
        gl_Position =gl_in[i].gl_Position;
        if(i==1) {
            gl_Position.y-=sqrt(3)*2.17f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 1.0f;
        }
        else {
            gl_Position.y-=sqrt(3)*0.4f*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)*2.038f/3.0f;
            gl_Position.x -= 1.1f;
        }


        gl_Position.w += 4.5f;
        EmitVertex();
    }
    color_f =  vec3(1,0,0);
    gl_Position.x += 1.9;
    gl_Position.y += sqrt(3)*4.18*(gl_in[1].gl_Position.x-gl_in[0].gl_Position.x)/(3.0f)+gl_in[0].gl_Position.y;
    gl_Position.z = 0.0f;
    gl_Position.w = 6.02f;
    EmitVertex();
    EndPrimitive();

    //------------------------------------------------------------------------------



}//